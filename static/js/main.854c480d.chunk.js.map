{"version":3,"sources":["assets/stena.gif","views/app/index.tsx","serviceWorker.js","index.js"],"names":["module","exports","Lab1_1","style","marginLeft","marginRight","textAlign","fontSize","fontWeight","className","Lab1_2","color","border","Lab1_3","backgroundImage","background","width","height","fontFamily","App","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,mC,uMCSrCC,G,MAAS,WACb,OACE,yBAAKC,MAAO,CAAEC,WAAY,GAAIC,YAAa,KACzC,4BACE,uBAAGF,MAAO,CAAEG,UAAW,SAAUC,SAAU,GAAIC,WAAY,SAA3D,oYAIF,2FACA,uBAAGL,MAAO,CAAEG,UAAW,UAAvB,qGACA,4BACA,yBAAKG,UAAU,cAAf,6JAEE,6BAFF,mIAIE,6BAJF,uIAME,6BANF,gIAQE,6BARF,4IAUE,8BAEF,4BACA,6BACA,6BACA,uBAAGN,MAAO,CAAEG,UAAW,UAAvB,yDAKAI,EAAS,WACb,OACE,yBAAKP,MAAO,CAAEC,WAAY,GAAIC,YAAa,KACzC,mEACA,wBAAIF,MAAO,CAAEQ,MAAO,OAAQC,OAAQ,eACpC,kGACA,wBAAIT,MAAO,CAAEQ,MAAO,MAAOC,OAAQ,eACnC,0HACA,wBAAIT,MAAO,CAAEQ,MAAO,SAAUC,OAAQ,eACtC,2BACE,yGAEF,wBAAIT,MAAO,CAAEQ,MAAO,QAASC,OAAQ,eACrC,2BACE,gKAEF,wBAAIT,MAAO,CAAEQ,MAAO,SAAUC,OAAQ,eACtC,2BACE,gKAEF,wBAAIT,MAAO,CAAEQ,MAAO,SAAUC,OAAQ,eACtC,uGACA,wBAAIT,MAAO,CAAEQ,MAAO,OAAQC,OAAQ,eACpC,+GAKAC,EAAS,WACb,OACE,yBACEV,MAAO,CACLC,WAAY,GACZC,YAAa,GACbS,gBAAgB,OAAD,OAASC,IAAT,KACfC,MAAO,QACPC,OAAQ,UAEV,4BACE,uBACEd,MAAO,CACLe,WAAY,QACZP,MAAO,OACPL,UAAW,SACXC,SAAU,GACVC,WAAY,SANhB,wFAWF,4BACE,gPAEE,4BACE,4FACA,0EACA,+HAEE,4BACE,oEACA,kFAGJ,2FAGJ,gPAEE,4BACE,oEACA,wQACA,yJACA,2FAGJ,sPAEE,4BACE,sSACA,4IAEE,4BACE,oEACA,kFAGJ,2QAEE,4BACE,oEACA,kFAGJ,4FAIN,4BACE,uBACEL,MAAO,CACLe,WAAY,QACZP,MAAO,SACPL,UAAW,SACXC,SAAU,GACVC,WAAY,SANhB,iEAWF,4BACE,yGACA,yOACA,yGACA,6NACA,yGACA,2RAuBOW,EAjBc,WAC3B,OACE,oCACE,yBAAKV,UAAU,aACb,kBAAC,IAAD,CAAMW,GAAG,WAAT,sFACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,sFACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,uFAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWrB,IACvC,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,UAAUC,UAAWb,IACvC,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,UAAUC,UAAWV,OChK3BW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACA,kBAAC,EAAD,QAGFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.854c480d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stena.a1c31330.gif\";","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport background from \"../../assets/stena.gif\";\r\n\r\nimport \"./app.css\";\r\n\r\ninterface Props {}\r\n\r\nconst Lab1_1 = () => {\r\n  return (\r\n    <div style={{ marginLeft: 10, marginRight: 10 }}>\r\n      <h1>\r\n        <p style={{ textAlign: \"center\", fontSize: 30, fontWeight: \"bold\" }}>\r\n          Сибирский государственный университет телекоммуникаций и информатики\r\n        </p>\r\n      </h1>\r\n      <b>Группа ПБТ-9342</b>\r\n      <p style={{ textAlign: \"right\" }}>Зеленский Алексей</p>\r\n      <p></p>\r\n      <div className=\"blockquote\">\r\n        О сколько нам открытий чудных\r\n        <br />\r\n        Готовят просвещенья дух\r\n        <br />\r\n        И опыт, сын ошибок трудных,\r\n        <br />\r\n        И гений, парадоксов друг,\r\n        <br />\r\n        И случай, бог изобретатель.\r\n        <br />\r\n      </div>\r\n      <p></p>\r\n      <br />\r\n      <br />\r\n      <p style={{ textAlign: \"right\" }}>А.С Пушкин</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Lab1_2 = () => {\r\n  return (\r\n    <div style={{ marginLeft: 10, marginRight: 10 }}>\r\n      <i>Курсив</i>\r\n      <hr style={{ color: \"blue\", border: \"2px solid\" }} />\r\n      <b>Жирный шрифт</b>\r\n      <hr style={{ color: \"red\", border: \"2px solid\" }} />\r\n      <p>Печатная машинка</p>\r\n      <hr style={{ color: \"yellow\", border: \"2px solid\" }} />\r\n      <b>\r\n        <i>Жирный курсив</i>\r\n      </b>\r\n      <hr style={{ color: \"green\", border: \"2px solid\" }} />\r\n      <p>\r\n        <b>Жирная печатная машинка</b>\r\n      </p>\r\n      <hr style={{ color: \"maroon\", border: \"2px solid\" }} />\r\n      <p>\r\n        <i>Курсив+печатная машинка</i>\r\n      </p>\r\n      <hr style={{ color: \"purple\", border: \"2px solid\" }} />\r\n      <u>Подчёркнутый</u>\r\n      <hr style={{ color: \"lime\", border: \"2px solid\" }} />\r\n      <s>Перечёркнутый</s>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Lab1_3 = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        backgroundImage: `url(${background})`,\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n      }}>\r\n      <h1>\r\n        <p\r\n          style={{\r\n            fontFamily: \"Arial\",\r\n            color: \"teal\",\r\n            textAlign: \"center\",\r\n            fontSize: 18,\r\n            fontWeight: \"bold\",\r\n          }}>\r\n          Лабораторная № 1_3\r\n        </p>\r\n      </h1>\r\n      <ul>\r\n        <li>\r\n          Предметы преподаваемые на первом курсе:\r\n          <ol>\r\n            <li>Математика</li>\r\n            <li>История</li>\r\n            <li>\r\n              Программирование\r\n              <ul>\r\n                <li>теория</li>\r\n                <li>практика</li>\r\n              </ul>\r\n            </li>\r\n            <li>и так далее.</li>\r\n          </ol>\r\n        </li>\r\n        <li>\r\n          Предметы преподаваемые на втором курсе:\r\n          <ol>\r\n            <li>Физика</li>\r\n            <li>Электротехника, электроника и схемотехника</li>\r\n            <li>Дискретная математика</li>\r\n            <li>и так далее.</li>\r\n          </ol>\r\n        </li>\r\n        <li>\r\n          Предметы преподаваемые на третьем курсе:\r\n          <ol>\r\n            <li>Теория вероятностей и математическая статистика</li>\r\n            <li>\r\n              Интернет-технологии\r\n              <ul>\r\n                <li>теория</li>\r\n                <li>практика</li>\r\n              </ul>\r\n            </li>\r\n            <li>\r\n              Объектно-ориентированное программирование\r\n              <ul>\r\n                <li>теория</li>\r\n                <li>практика</li>\r\n              </ul>\r\n            </li>\r\n            <li>и так далее.</li>\r\n          </ol>\r\n        </li>\r\n      </ul>\r\n      <h1>\r\n        <p\r\n          style={{\r\n            fontFamily: \"Arial\",\r\n            color: \"maroon\",\r\n            textAlign: \"center\",\r\n            fontSize: 18,\r\n            fontWeight: \"bold\",\r\n          }}>\r\n          Факультеты\r\n        </p>\r\n      </h1>\r\n      <dl>\r\n        <dt>Факультет ИВТ</dt>\r\n        <dd>Информатики и вычислительной техники</dd>\r\n        <dt>Факультет МРМ</dt>\r\n        <dd>Мобильной радиосвязи и мультимедиа</dd>\r\n        <dt>Факультет МТС</dt>\r\n        <dd>Мультисервисных телекоммуникационных систем</dd>\r\n      </dl>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App: React.FC<Props> = () => {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Link to=\"/lab1_1\">Лабораторная №1_1</Link>\r\n        <Link to=\"/lab1_2\">Лабораторная №1_2</Link>\r\n        <Link to=\"/lab1_3\">Лабораторная №1_3</Link>\r\n      </div>\r\n      <Switch>\r\n        <Route exact path=\"/lab1_1\" component={Lab1_1} />\r\n        <Route exact path=\"/lab1_2\" component={Lab1_2} />\r\n        <Route exact path=\"/lab1_3\" component={Lab1_3} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './views/app';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n    <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}